@namespace ComponentLibraryDemo

<MudTable Items="@_model" Bordered="true" FixedHeader="true" FixedFooter="true" Style="height: 275px; overflow-y: scroll">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Name">@context.Value</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 50, 100 }"/>
    </PagerContent>
</MudTable>

@code {

    [Parameter]
    public bool ValueHasChanged { get; set; }

    [Parameter]
    public EventCallback ResetChangedValue { get; set; }

    List<ValueViewModel> _model = new();

    protected override async Task OnParametersSetAsync()
    {
        if (ValueHasChanged)
        {
            StateHasChanged();
            await ResetChangedValue.InvokeAsync();
        }
        var api = RestService.For<IValuesClient>("https://localhost:7199/api");
        _model = await api.Get();
    }

}